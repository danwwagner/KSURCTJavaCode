/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ksurctjavacode;

import javax.swing.JProgressBar;
import java.lang.*;

/**
 *
 * @author ksurct
 */
public class BasestationGUI extends javax.swing.JDialog {

    /**
     * Creates new form BasestationGUI
     */
    public BasestationGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leftMotorProgress = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        leftMotorLabel = new javax.swing.JLabel();
        rightMotorLabel = new javax.swing.JLabel();
        rightMotorProgress = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
        frontLeftIRLabel = new javax.swing.JLabel();
        frontRightIRLabel = new javax.swing.JLabel();
        rearLeftIRLabel = new javax.swing.JLabel();
        rearRightIRLabel = new javax.swing.JLabel();
        ledStateLabel = new javax.swing.JLabel();
        frontLeftIRText = new javax.swing.JLabel();
        frontRightIRText = new javax.swing.JLabel();
        rearLeftIRText = new javax.swing.JLabel();
        rearRightIRText = new javax.swing.JLabel();
        ledStatusButton = new javax.swing.JToggleButton();
        armStateLabel = new javax.swing.JLabel();
        armStatusButton = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        leftMotorLabel.setText("Left Motor");

        rightMotorLabel.setText("Right Motor");

        frontLeftIRLabel.setText("FL IR");

        frontRightIRLabel.setText("FR IR");

        rearLeftIRLabel.setText("RL IR");

        rearRightIRLabel.setText("RR IR");

        ledStateLabel.setText("LED");

        frontLeftIRText.setText("...........");

        frontRightIRText.setText("...........");

        rearLeftIRText.setText("...........");

        rearRightIRText.setText("...........");

        ledStatusButton.setText("OFF");

        armStateLabel.setText("Arm");

        armStatusButton.setText("LAUNCH!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(leftMotorProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(leftMotorLabel)
                            .addComponent(rightMotorProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rightMotorLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(frontLeftIRLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(frontRightIRLabel)
                                .addGap(91, 91, 91)
                                .addComponent(rearLeftIRLabel)
                                .addGap(54, 54, 54)
                                .addComponent(rearRightIRLabel)))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(frontLeftIRText)
                        .addGap(47, 47, 47)
                        .addComponent(frontRightIRText)
                        .addGap(71, 71, 71)
                        .addComponent(rearLeftIRText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rearRightIRText)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ledStateLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ledStatusButton)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(165, 165, 165)
                                .addComponent(armStateLabel)
                                .addGap(91, 91, 91))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(armStatusButton)
                                .addGap(54, 54, 54))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(leftMotorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(leftMotorProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rightMotorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rightMotorProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frontLeftIRLabel)
                    .addComponent(frontRightIRLabel)
                    .addComponent(rearLeftIRLabel)
                    .addComponent(rearRightIRLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frontLeftIRText)
                    .addComponent(frontRightIRText)
                    .addComponent(rearLeftIRText)
                    .addComponent(rearRightIRText))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ledStateLabel)
                    .addComponent(ledStatusButton)
                    .addComponent(armStateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(armStatusButton)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        char key = evt.getKeyChar();
        switch (key)
        {
            case 'w':
                leftMotorProgress.setValue(100);
                break;
        }
        
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BasestationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BasestationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BasestationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BasestationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BasestationGUI dialog = new BasestationGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel armStateLabel;
    private javax.swing.JToggleButton armStatusButton;
    private javax.swing.JLabel frontLeftIRLabel;
    private javax.swing.JLabel frontLeftIRText;
    private javax.swing.JLabel frontRightIRLabel;
    private javax.swing.JLabel frontRightIRText;
    private javax.swing.JLabel ledStateLabel;
    private javax.swing.JToggleButton ledStatusButton;
    private javax.swing.JLabel leftMotorLabel;
    private javax.swing.JProgressBar leftMotorProgress;
    private javax.swing.JLabel rearLeftIRLabel;
    private javax.swing.JLabel rearLeftIRText;
    private javax.swing.JLabel rearRightIRLabel;
    private javax.swing.JLabel rearRightIRText;
    private javax.swing.JLabel rightMotorLabel;
    private javax.swing.JProgressBar rightMotorProgress;
    // End of variables declaration//GEN-END:variables
}
